# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy package.json and install dependencies
COPY package*.json ./
RUN npm install

# Copy the rest of the application including .env file
COPY . .

# Load environment variables from .env file
# Note: For production deployment, consider using environment variables 
# from your deployment platform instead of embedding them in the image
ENV $(cat .env | xargs)

# Create the public directory for static files if needed
RUN mkdir -p public

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Copy package files and install production dependencies only
COPY package*.json ./
RUN npm install --only=production

# Copy .env file for production environment
# Note: For production deployment, consider using environment variables
# from your deployment platform instead of embedding them in the image
COPY .env ./
ENV $(cat .env | xargs)

# Copy built application and static files
COPY --from=build /app/dist ./dist
COPY --from=build /app/public ./public

# Expose the API port
EXPOSE 3000

# Start the production server
CMD ["npm", "run", "start:prod"] 